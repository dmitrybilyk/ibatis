<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Person">

    <cacheModel id="personCacheSelect" type="MEMORY" readOnly="false" serialize="true" >
        <flushInterval hours="24"/>
        <flushOnExecute statement="insertPerson"/>
        <property name="reference-type" value="SOFT" />
    </cacheModel>


    <sql id="selectUsersPerson">
        SELECT *
    </sql>

    <sql id="selectPerson">
        SELECT *
    </sql>

    <sql id="selectPersons">
        SELECT * FROM PERSON PERSONS
    </sql>

    <resultMap class="com.learn.model.Person" groupBy="id" id="personsMap">
        <result column="PER_ID" property="id"/>
        <result column="PER_FIRST_NAME" property="firstName"/>
        <result column="PER_LAST_NAME" property="lastName"/>
        <result column="PER_BIRTH_DATE" property="birthDate"/>
        <result column="PER_WEIGHT_KG" property="weightInKilograms"/>
        <result column="PER_HEIGHT_M" property="heightInMeters"/>
    </resultMap>

    <resultMap class="com.learn.model.Person" groupBy="id" id="personsUsersMap">
        <result column="per_id" property="id"/>
        <result column="per_first_name" property="firstName"/>
        <result column="per_last_name" property="lastName"/>
    </resultMap>

    <select id="getAllPersons" resultClass="com.learn.model.Person" resultMap="personsMap">
        <include refid="selectPerson" />
        FROM PERSON
    </select>

    <select id="getAllPersonsCount" cacheModel="personCacheSelect" resultClass="java.lang.Integer">
        SELECT COUNT(*) FROM PERSON PERSONS
    </select>

    <select id="getPersonsByIds" resultMap="personsMap" parameterClass="java.util.Map">
        <include refid="selectPerson" />
        <isNotEmpty property="personIdHolderList">
        WHERE PERSONS.PER_ID
        <iterate open=" in (" close=")" conjunction="," property="personIdsHolderList">
            #personIdsHolderList[].personId#
        </iterate>
        </isNotEmpty>
        FROM PERSON PERSONS
    </select>

    <sql id="personsColumnsWhereFragment">
        <isEqual property="searchBO.condition[].field" compareValue="PER_FIRST_NAME">PERSONS.PER_FIRST_NAME</isEqual>
    </sql>

    <sql id="personsOrderByFragment">
        <iterate property="searchBO.order" conjunction=", " prepend="order by" removeFirstPrepend="true">
            <isEqual property="searchBO.order[].field" compareValue="PER_FIRST_NAME">PERSONS.PER_FIRST_NAME</isEqual>
            $searchBO.order[].direction.value$
        </iterate>
    </sql>

    <sql id="personsWhereFragment">
        <isParameterPresent>
            <isNotEmpty property="searchBO">
                <iterate property="searchBO.condition" conjunction=" " prepend=" " removeFirstPrepend="true">
                    <isEqual property="searchBO.condition[].openBracket" compareValue="true">(</isEqual>
                    <isNotNull property="searchBO.condition[].field">
                        <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">lower(</isEqual>

                        <include refid="personsColumnsWhereFragment"/>

                        <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">)</isEqual>
                        $searchBO.condition[].comparator.value$
                        <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">lower(</isEqual>
                        #searchBO.condition[].value#
                        <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">)</isEqual>

                    </isNotNull>

                    <isEqual property="searchBO.condition[].closeBracket" compareValue="true">)</isEqual>
                    <isNotNull property="searchBO.condition[].operator">$searchBO.condition[].operator.value$</isNotNull>
                </iterate>
            </isNotEmpty>
        </isParameterPresent>
    </sql>


    <select id="getPersonsByConditions" resultMap="personsMap" parameterClass="java.util.Map">
        <include refid="selectPersons" />
        <isNotEmpty property="searchBO">
            <isNotEmpty property="searchBO.condition"> where </isNotEmpty>
            <include refid="personsWhereFragment"/>
            <include refid="personsOrderByFragment"/>
        </isNotEmpty>
    </select>





    <select id="getAllPersonsFromUsers" resultClass="com.learn.model.Person" resultMap="personsUsersMap">
        <include refid="selectUsersPerson" />
        FROM person
    </select>


    <select id="getPerson" resultClass="com.learn.model.Person">
        <include refid="selectPerson" />
        FROM PERSON PERSONS
        WHERE PER_ID = #value#
    </select>


    <!-- Use Person object (JavaBean) properties as parameters for insert. Each of the
 parameters in the #hash# symbols is a JavaBeans property. -->
    <insert id="insertPerson" parameterClass="com.learn.model.Person">
        INSERT INTO
        PERSON (PER_ID, PER_FIRST_NAME, PER_LAST_NAME,
        PER_BIRTH_DATE, PER_WEIGHT_KG, PER_HEIGHT_M)
        VALUES (#id#, #firstName#, #lastName#,
        #birthDate#, #weightInKilograms#, #heightInMeters#)
    </insert>
    <!-- Use Person object (JavaBean) properties as parameters for update. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <update id="updatePerson" parameterClass="com.learn.model.Person">
        UPDATE PERSON
        SET PER_FIRST_NAME = #firstName#,
        PER_LAST_NAME = #lastName#, PER_BIRTH_DATE = #birthDate#,
        PER_WEIGHT_KG = #weightInKilograms#,
        PER_HEIGHT_M = #heightInMeters#
        WHERE PER_ID = #id#
    </update>
    <!-- Use Person object (JavaBean) “id” properties as parameters for delete. Each of the
    parameters in the #hash# symbols is a JavaBeans property. -->
    <delete id="deletePerson" parameterClass="com.learn.model.Person">
        DELETE PERSON
        WHERE PER_ID = #id#
    </delete>

    <select id="getMaxId" resultClass="java.lang.Integer">
        SELECT MAX(PER_ID) FROM PERSON
    </select>


</sqlMap>